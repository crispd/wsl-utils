name: Validate manifest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: |
          npm ci --no-audit --no-fund
      - name: Run manifest validator
        run: |
          npm run validate:manifest

  validate-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prepare PowerShell gallery + NuGet and install Pester (pinned)
        shell: pwsh
        run: |
          # Ensure TLS 1.2 for PSGallery access
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

          # Ensure NuGet provider is available for Install-Module/Install-Package
          if (-not (Get-PackageProvider -Name NuGet -ErrorAction SilentlyContinue)) {
            Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force -Scope CurrentUser
          }

          # Register PSGallery if it's missing
          if (-not (Get-PSRepository -Name PSGallery -ErrorAction SilentlyContinue)) {
            Register-PSRepository -Name PSGallery -SourceLocation 'https://www.powershellgallery.com/api/v2' -InstallationPolicy Trusted
          }

          # Mark PSGallery as trusted for installs
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted

          # Install a pinned Pester version for reproducible CI runs
          $pesterVersion = '5.3.4'
          Install-Module -Name Pester -RequiredVersion $pesterVersion -Scope CurrentUser -Force -SkipPublisherCheck
      - name: Run Pester test for install-node dry-run
        shell: pwsh
        run: |
          pwsh -NoProfile -Command "Import-Module Pester; Invoke-Pester -Script './scripts/tests/test-install-node-dryrun.Tests.ps1' -EnableExit"